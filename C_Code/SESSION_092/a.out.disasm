
a.out:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 20                	add    %ah,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 3a                	add    %bh,(%edx)
 8048199:	44                   	inc    %esp
 804819a:	28 a2 3a 39 fc 1c    	sub    %ah,0x1cfc393a(%edx)
 80481a0:	39 0b                	cmp    %ecx,(%ebx)
 80481a2:	46                   	inc    %esi
 80481a3:	ff                   	(bad)  
 80481a4:	79 37                	jns    80481dd <_init-0xf3>
 80481a6:	26 c2 d5 9c          	es ret $0x9cd5
 80481aa:	08 e5                	or     %ah,%ch

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	04 00                	add    $0x0,%al
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 00       	add    $0x0,%eax
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 04 00             	add    %al,(%eax,%eax,1)
 80481c6:	00 00                	add    %al,(%eax)
 80481c8:	ad                   	lods   %ds:(%esi),%eax
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x144>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	1a 00                	sbb    (%eax),%al
	...
 80481e6:	00 00                	add    %al,(%eax)
 80481e8:	12 00                	adc    (%eax),%al
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	3d 00 00 00 00       	cmp    $0x0,%eax
 80481f1:	00 00                	add    %al,(%eax)
 80481f3:	00 00                	add    %al,(%eax)
 80481f5:	00 00                	add    %al,(%eax)
 80481f7:	00 20                	add    %ah,(%eax)
 80481f9:	00 00                	add    %al,(%eax)
 80481fb:	00 2b                	add    %ch,(%ebx)
	...
 8048205:	00 00                	add    %al,(%eax)
 8048207:	00 12                	add    %dl,(%edx)
 8048209:	00 00                	add    %al,(%eax)
 804820b:	00 0b                	add    %cl,(%ebx)
 804820d:	00 00                	add    %al,(%eax)
 804820f:	00 cc                	add    %cl,%ah
 8048211:	85 04 08             	test   %eax,(%eax,%ecx,1)
 8048214:	04 00                	add    $0x0,%al
 8048216:	00 00                	add    %al,(%eax)
 8048218:	11 00                	adc    %eax,(%eax)
 804821a:	10 00                	adc    %al,(%eax)

Disassembly of section .dynstr:

0804821c <.dynstr>:
 804821c:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048220:	63 2e                	arpl   %bp,(%esi)
 8048222:	73 6f                	jae    8048293 <_init-0x3d>
 8048224:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%edi)
 8048229:	4f                   	dec    %edi
 804822a:	5f                   	pop    %edi
 804822b:	73 74                	jae    80482a1 <_init-0x2f>
 804822d:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048234:	64 
 8048235:	00 5f 5f             	add    %bl,0x5f(%edi)
 8048238:	73 74                	jae    80482ae <_init-0x22>
 804823a:	61                   	popa   
 804823b:	63 6b 5f             	arpl   %bp,0x5f(%ebx)
 804823e:	63 68 6b             	arpl   %bp,0x6b(%eax)
 8048241:	5f                   	pop    %edi
 8048242:	66 61                	popaw  
 8048244:	69 6c 00 5f 5f 6c 69 	imul   $0x62696c5f,0x5f(%eax,%eax,1),%ebp
 804824b:	62 
 804824c:	63 5f 73             	arpl   %bx,0x73(%edi)
 804824f:	74 61                	je     80482b2 <_init-0x1e>
 8048251:	72 74                	jb     80482c7 <_init-0x9>
 8048253:	5f                   	pop    %edi
 8048254:	6d                   	insl   (%dx),%es:(%edi)
 8048255:	61                   	popa   
 8048256:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%esi),%ebp
 804825d:	6f                   	outsl  %ds:(%esi),(%dx)
 804825e:	6e                   	outsb  %ds:(%esi),(%dx)
 804825f:	5f                   	pop    %edi
 8048260:	73 74                	jae    80482d6 <_init+0x6>
 8048262:	61                   	popa   
 8048263:	72 74                	jb     80482d9 <_init+0x9>
 8048265:	5f                   	pop    %edi
 8048266:	5f                   	pop    %edi
 8048267:	00 47 4c             	add    %al,0x4c(%edi)
 804826a:	49                   	dec    %ecx
 804826b:	42                   	inc    %edx
 804826c:	43                   	inc    %ebx
 804826d:	5f                   	pop    %edi
 804826e:	32 2e                	xor    (%esi),%ch
 8048270:	30 00                	xor    %al,(%eax)
 8048272:	47                   	inc    %edi
 8048273:	4c                   	dec    %esp
 8048274:	49                   	dec    %ecx
 8048275:	42                   	inc    %edx
 8048276:	43                   	inc    %ebx
 8048277:	5f                   	pop    %edi
 8048278:	32 2e                	xor    (%esi),%ch
 804827a:	34 00                	xor    $0x0,%al

Disassembly of section .gnu.version:

0804827c <.gnu.version>:
 804827c:	00 00                	add    %al,(%eax)
 804827e:	02 00                	add    (%eax),%al
 8048280:	00 00                	add    %al,(%eax)
 8048282:	03 00                	add    (%eax),%eax
 8048284:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

08048288 <.gnu.version_r>:
 8048288:	01 00                	add    %eax,(%eax)
 804828a:	02 00                	add    (%eax),%al
 804828c:	01 00                	add    %eax,(%eax)
 804828e:	00 00                	add    %al,(%eax)
 8048290:	10 00                	adc    %al,(%eax)
 8048292:	00 00                	add    %al,(%eax)
 8048294:	00 00                	add    %al,(%eax)
 8048296:	00 00                	add    %al,(%eax)
 8048298:	10 69 69             	adc    %ch,0x69(%ecx)
 804829b:	0d 00 00 03 00       	or     $0x30000,%eax
 80482a0:	4c                   	dec    %esp
 80482a1:	00 00                	add    %al,(%eax)
 80482a3:	00 10                	add    %dl,(%eax)
 80482a5:	00 00                	add    %al,(%eax)
 80482a7:	00 14 69             	add    %dl,(%ecx,%ebp,2)
 80482aa:	69 0d 00 00 02 00 56 	imul   $0x56,0x20000,%ecx
 80482b1:	00 00 00 
 80482b4:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

080482b8 <.rel.dyn>:
 80482b8:	fc                   	cld    
 80482b9:	9f                   	lahf   
 80482ba:	04 08                	add    $0x8,%al
 80482bc:	06                   	push   %es
 80482bd:	02 00                	add    (%eax),%al
	...

Disassembly of section .rel.plt:

080482c0 <.rel.plt>:
 80482c0:	0c a0                	or     $0xa0,%al
 80482c2:	04 08                	add    $0x8,%al
 80482c4:	07                   	pop    %es
 80482c5:	01 00                	add    %eax,(%eax)
 80482c7:	00 10                	add    %dl,(%eax)
 80482c9:	a0 04 08 07 03       	mov    0x3070804,%al
	...

Disassembly of section .init:

080482d0 <_init>:
 80482d0:	53                   	push   %ebx
 80482d1:	83 ec 08             	sub    $0x8,%esp
 80482d4:	e8 97 00 00 00       	call   8048370 <__x86.get_pc_thunk.bx>
 80482d9:	81 c3 27 1d 00 00    	add    $0x1d27,%ebx
 80482df:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80482e5:	85 c0                	test   %eax,%eax
 80482e7:	74 05                	je     80482ee <_init+0x1e>
 80482e9:	e8 42 00 00 00       	call   8048330 <__libc_start_main@plt+0x10>
 80482ee:	83 c4 08             	add    $0x8,%esp
 80482f1:	5b                   	pop    %ebx
 80482f2:	c3                   	ret    

Disassembly of section .plt:

08048300 <__stack_chk_fail@plt-0x10>:
 8048300:	ff 35 04 a0 04 08    	pushl  0x804a004
 8048306:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804830c:	00 00                	add    %al,(%eax)
	...

08048310 <__stack_chk_fail@plt>:
 8048310:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048316:	68 00 00 00 00       	push   $0x0
 804831b:	e9 e0 ff ff ff       	jmp    8048300 <_init+0x30>

08048320 <__libc_start_main@plt>:
 8048320:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048326:	68 08 00 00 00       	push   $0x8
 804832b:	e9 d0 ff ff ff       	jmp    8048300 <_init+0x30>

Disassembly of section .plt.got:

08048330 <.plt.got>:
 8048330:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 8048336:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

08048340 <_start>:
 8048340:	31 ed                	xor    %ebp,%ebp
 8048342:	5e                   	pop    %esi
 8048343:	89 e1                	mov    %esp,%ecx
 8048345:	83 e4 f0             	and    $0xfffffff0,%esp
 8048348:	50                   	push   %eax
 8048349:	54                   	push   %esp
 804834a:	52                   	push   %edx
 804834b:	68 b0 85 04 08       	push   $0x80485b0
 8048350:	68 50 85 04 08       	push   $0x8048550
 8048355:	51                   	push   %ecx
 8048356:	56                   	push   %esi
 8048357:	68 3b 84 04 08       	push   $0x804843b
 804835c:	e8 bf ff ff ff       	call   8048320 <__libc_start_main@plt>
 8048361:	f4                   	hlt    
 8048362:	66 90                	xchg   %ax,%ax
 8048364:	66 90                	xchg   %ax,%ax
 8048366:	66 90                	xchg   %ax,%ax
 8048368:	66 90                	xchg   %ax,%ax
 804836a:	66 90                	xchg   %ax,%ax
 804836c:	66 90                	xchg   %ax,%ax
 804836e:	66 90                	xchg   %ax,%ax

08048370 <__x86.get_pc_thunk.bx>:
 8048370:	8b 1c 24             	mov    (%esp),%ebx
 8048373:	c3                   	ret    
 8048374:	66 90                	xchg   %ax,%ax
 8048376:	66 90                	xchg   %ax,%ax
 8048378:	66 90                	xchg   %ax,%ax
 804837a:	66 90                	xchg   %ax,%ax
 804837c:	66 90                	xchg   %ax,%ax
 804837e:	66 90                	xchg   %ax,%ax

08048380 <deregister_tm_clones>:
 8048380:	b8 1f a0 04 08       	mov    $0x804a01f,%eax
 8048385:	2d 1c a0 04 08       	sub    $0x804a01c,%eax
 804838a:	83 f8 06             	cmp    $0x6,%eax
 804838d:	76 1a                	jbe    80483a9 <deregister_tm_clones+0x29>
 804838f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048394:	85 c0                	test   %eax,%eax
 8048396:	74 11                	je     80483a9 <deregister_tm_clones+0x29>
 8048398:	55                   	push   %ebp
 8048399:	89 e5                	mov    %esp,%ebp
 804839b:	83 ec 14             	sub    $0x14,%esp
 804839e:	68 1c a0 04 08       	push   $0x804a01c
 80483a3:	ff d0                	call   *%eax
 80483a5:	83 c4 10             	add    $0x10,%esp
 80483a8:	c9                   	leave  
 80483a9:	f3 c3                	repz ret 
 80483ab:	90                   	nop
 80483ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080483b0 <register_tm_clones>:
 80483b0:	b8 1c a0 04 08       	mov    $0x804a01c,%eax
 80483b5:	2d 1c a0 04 08       	sub    $0x804a01c,%eax
 80483ba:	c1 f8 02             	sar    $0x2,%eax
 80483bd:	89 c2                	mov    %eax,%edx
 80483bf:	c1 ea 1f             	shr    $0x1f,%edx
 80483c2:	01 d0                	add    %edx,%eax
 80483c4:	d1 f8                	sar    %eax
 80483c6:	74 1b                	je     80483e3 <register_tm_clones+0x33>
 80483c8:	ba 00 00 00 00       	mov    $0x0,%edx
 80483cd:	85 d2                	test   %edx,%edx
 80483cf:	74 12                	je     80483e3 <register_tm_clones+0x33>
 80483d1:	55                   	push   %ebp
 80483d2:	89 e5                	mov    %esp,%ebp
 80483d4:	83 ec 10             	sub    $0x10,%esp
 80483d7:	50                   	push   %eax
 80483d8:	68 1c a0 04 08       	push   $0x804a01c
 80483dd:	ff d2                	call   *%edx
 80483df:	83 c4 10             	add    $0x10,%esp
 80483e2:	c9                   	leave  
 80483e3:	f3 c3                	repz ret 
 80483e5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80483e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080483f0 <__do_global_dtors_aux>:
 80483f0:	80 3d 1c a0 04 08 00 	cmpb   $0x0,0x804a01c
 80483f7:	75 13                	jne    804840c <__do_global_dtors_aux+0x1c>
 80483f9:	55                   	push   %ebp
 80483fa:	89 e5                	mov    %esp,%ebp
 80483fc:	83 ec 08             	sub    $0x8,%esp
 80483ff:	e8 7c ff ff ff       	call   8048380 <deregister_tm_clones>
 8048404:	c6 05 1c a0 04 08 01 	movb   $0x1,0x804a01c
 804840b:	c9                   	leave  
 804840c:	f3 c3                	repz ret 
 804840e:	66 90                	xchg   %ax,%ax

08048410 <frame_dummy>:
 8048410:	b8 10 9f 04 08       	mov    $0x8049f10,%eax
 8048415:	8b 10                	mov    (%eax),%edx
 8048417:	85 d2                	test   %edx,%edx
 8048419:	75 05                	jne    8048420 <frame_dummy+0x10>
 804841b:	eb 93                	jmp    80483b0 <register_tm_clones>
 804841d:	8d 76 00             	lea    0x0(%esi),%esi
 8048420:	ba 00 00 00 00       	mov    $0x0,%edx
 8048425:	85 d2                	test   %edx,%edx
 8048427:	74 f2                	je     804841b <frame_dummy+0xb>
 8048429:	55                   	push   %ebp
 804842a:	89 e5                	mov    %esp,%ebp
 804842c:	83 ec 14             	sub    $0x14,%esp
 804842f:	50                   	push   %eax
 8048430:	ff d2                	call   *%edx
 8048432:	83 c4 10             	add    $0x10,%esp
 8048435:	c9                   	leave  
 8048436:	e9 75 ff ff ff       	jmp    80483b0 <register_tm_clones>

0804843b <main>:
 804843b:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 804843f:	83 e4 f0             	and    $0xfffffff0,%esp
 8048442:	ff 71 fc             	pushl  -0x4(%ecx)
 8048445:	55                   	push   %ebp
 8048446:	89 e5                	mov    %esp,%ebp
 8048448:	51                   	push   %ecx
 8048449:	83 ec 24             	sub    $0x24,%esp
 804844c:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 8048452:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048455:	31 c0                	xor    %eax,%eax
 8048457:	c7 45 e0 64 00 00 00 	movl   $0x64,-0x20(%ebp)
 804845e:	c7 45 e4 50 00 00 00 	movl   $0x50,-0x1c(%ebp)
 8048465:	c7 45 e8 3c 00 00 00 	movl   $0x3c,-0x18(%ebp)
 804846c:	c7 45 ec 28 00 00 00 	movl   $0x28,-0x14(%ebp)
 8048473:	c7 45 f0 14 00 00 00 	movl   $0x14,-0x10(%ebp)
 804847a:	83 ec 08             	sub    $0x8,%esp
 804847d:	6a 05                	push   $0x5
 804847f:	8d 45 e0             	lea    -0x20(%ebp),%eax
 8048482:	50                   	push   %eax
 8048483:	e8 21 00 00 00       	call   80484a9 <insertion_sort>
 8048488:	83 c4 10             	add    $0x10,%esp
 804848b:	b8 00 00 00 00       	mov    $0x0,%eax
 8048490:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8048493:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 804849a:	74 05                	je     80484a1 <main+0x66>
 804849c:	e8 6f fe ff ff       	call   8048310 <__stack_chk_fail@plt>
 80484a1:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 80484a4:	c9                   	leave  
 80484a5:	8d 61 fc             	lea    -0x4(%ecx),%esp
 80484a8:	c3                   	ret    

080484a9 <insertion_sort>:
 80484a9:	55                   	push   %ebp
 80484aa:	89 e5                	mov    %esp,%ebp
 80484ac:	83 ec 10             	sub    $0x10,%esp
 80484af:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%ebp)
 80484b6:	eb 7f                	jmp    8048537 <insertion_sort+0x8e>
 80484b8:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80484bb:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 80484c2:	8b 45 08             	mov    0x8(%ebp),%eax
 80484c5:	01 d0                	add    %edx,%eax
 80484c7:	8b 00                	mov    (%eax),%eax
 80484c9:	89 45 fc             	mov    %eax,-0x4(%ebp)
 80484cc:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80484cf:	83 e8 01             	sub    $0x1,%eax
 80484d2:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80484d5:	eb 29                	jmp    8048500 <insertion_sort+0x57>
 80484d7:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80484da:	83 c0 01             	add    $0x1,%eax
 80484dd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 80484e4:	8b 45 08             	mov    0x8(%ebp),%eax
 80484e7:	01 c2                	add    %eax,%edx
 80484e9:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80484ec:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
 80484f3:	8b 45 08             	mov    0x8(%ebp),%eax
 80484f6:	01 c8                	add    %ecx,%eax
 80484f8:	8b 00                	mov    (%eax),%eax
 80484fa:	89 02                	mov    %eax,(%edx)
 80484fc:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 8048500:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 8048504:	78 16                	js     804851c <insertion_sort+0x73>
 8048506:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048509:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8048510:	8b 45 08             	mov    0x8(%ebp),%eax
 8048513:	01 d0                	add    %edx,%eax
 8048515:	8b 00                	mov    (%eax),%eax
 8048517:	3b 45 fc             	cmp    -0x4(%ebp),%eax
 804851a:	7f bb                	jg     80484d7 <insertion_sort+0x2e>
 804851c:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804851f:	83 c0 01             	add    $0x1,%eax
 8048522:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8048529:	8b 45 08             	mov    0x8(%ebp),%eax
 804852c:	01 c2                	add    %eax,%edx
 804852e:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048531:	89 02                	mov    %eax,(%edx)
 8048533:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 8048537:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804853a:	3b 45 0c             	cmp    0xc(%ebp),%eax
 804853d:	0f 8c 75 ff ff ff    	jl     80484b8 <insertion_sort+0xf>
 8048543:	90                   	nop
 8048544:	c9                   	leave  
 8048545:	c3                   	ret    
 8048546:	66 90                	xchg   %ax,%ax
 8048548:	66 90                	xchg   %ax,%ax
 804854a:	66 90                	xchg   %ax,%ax
 804854c:	66 90                	xchg   %ax,%ax
 804854e:	66 90                	xchg   %ax,%ax

08048550 <__libc_csu_init>:
 8048550:	55                   	push   %ebp
 8048551:	57                   	push   %edi
 8048552:	56                   	push   %esi
 8048553:	53                   	push   %ebx
 8048554:	e8 17 fe ff ff       	call   8048370 <__x86.get_pc_thunk.bx>
 8048559:	81 c3 a7 1a 00 00    	add    $0x1aa7,%ebx
 804855f:	83 ec 0c             	sub    $0xc,%esp
 8048562:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 8048566:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804856c:	e8 5f fd ff ff       	call   80482d0 <_init>
 8048571:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048577:	29 c6                	sub    %eax,%esi
 8048579:	c1 fe 02             	sar    $0x2,%esi
 804857c:	85 f6                	test   %esi,%esi
 804857e:	74 25                	je     80485a5 <__libc_csu_init+0x55>
 8048580:	31 ff                	xor    %edi,%edi
 8048582:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048588:	83 ec 04             	sub    $0x4,%esp
 804858b:	ff 74 24 2c          	pushl  0x2c(%esp)
 804858f:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048593:	55                   	push   %ebp
 8048594:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 804859b:	83 c7 01             	add    $0x1,%edi
 804859e:	83 c4 10             	add    $0x10,%esp
 80485a1:	39 f7                	cmp    %esi,%edi
 80485a3:	75 e3                	jne    8048588 <__libc_csu_init+0x38>
 80485a5:	83 c4 0c             	add    $0xc,%esp
 80485a8:	5b                   	pop    %ebx
 80485a9:	5e                   	pop    %esi
 80485aa:	5f                   	pop    %edi
 80485ab:	5d                   	pop    %ebp
 80485ac:	c3                   	ret    
 80485ad:	8d 76 00             	lea    0x0(%esi),%esi

080485b0 <__libc_csu_fini>:
 80485b0:	f3 c3                	repz ret 

Disassembly of section .fini:

080485b4 <_fini>:
 80485b4:	53                   	push   %ebx
 80485b5:	83 ec 08             	sub    $0x8,%esp
 80485b8:	e8 b3 fd ff ff       	call   8048370 <__x86.get_pc_thunk.bx>
 80485bd:	81 c3 43 1a 00 00    	add    $0x1a43,%ebx
 80485c3:	83 c4 08             	add    $0x8,%esp
 80485c6:	5b                   	pop    %ebx
 80485c7:	c3                   	ret    

Disassembly of section .rodata:

080485c8 <_fp_hw>:
 80485c8:	03 00                	add    (%eax),%eax
	...

080485cc <_IO_stdin_used>:
 80485cc:	01 00                	add    %eax,(%eax)
 80485ce:	02 00                	add    (%eax),%al

Disassembly of section .eh_frame_hdr:

080485d0 <__GNU_EH_FRAME_HDR>:
 80485d0:	01 1b                	add    %ebx,(%ebx)
 80485d2:	03 3b                	add    (%ebx),%edi
 80485d4:	30 00                	xor    %al,(%eax)
 80485d6:	00 00                	add    %al,(%eax)
 80485d8:	05 00 00 00 30       	add    $0x30000000,%eax
 80485dd:	fd                   	std    
 80485de:	ff                   	(bad)  
 80485df:	ff 4c 00 00          	decl   0x0(%eax,%eax,1)
 80485e3:	00 6b fe             	add    %ch,-0x2(%ebx)
 80485e6:	ff                   	(bad)  
 80485e7:	ff 70 00             	pushl  0x0(%eax)
 80485ea:	00 00                	add    %al,(%eax)
 80485ec:	d9 fe                	fsin   
 80485ee:	ff                   	(bad)  
 80485ef:	ff 9c 00 00 00 80 ff 	lcall  *-0x800000(%eax,%eax,1)
 80485f6:	ff                   	(bad)  
 80485f7:	ff                   	(bad)  
 80485f8:	bc 00 00 00 e0       	mov    $0xe0000000,%esp
 80485fd:	ff                   	(bad)  
 80485fe:	ff                   	(bad)  
 80485ff:	ff 08                	decl   (%eax)
 8048601:	01 00                	add    %eax,(%eax)
	...

Disassembly of section .eh_frame:

08048604 <__FRAME_END__-0xe8>:
 8048604:	14 00                	adc    $0x0,%al
 8048606:	00 00                	add    %al,(%eax)
 8048608:	00 00                	add    %al,(%eax)
 804860a:	00 00                	add    %al,(%eax)
 804860c:	01 7a 52             	add    %edi,0x52(%edx)
 804860f:	00 01                	add    %al,(%ecx)
 8048611:	7c 08                	jl     804861b <__GNU_EH_FRAME_HDR+0x4b>
 8048613:	01 1b                	add    %ebx,(%ebx)
 8048615:	0c 04                	or     $0x4,%al
 8048617:	04 88                	add    $0x88,%al
 8048619:	01 00                	add    %eax,(%eax)
 804861b:	00 20                	add    %ah,(%eax)
 804861d:	00 00                	add    %al,(%eax)
 804861f:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048622:	00 00                	add    %al,(%eax)
 8048624:	dc fc                	fdivr  %st,%st(4)
 8048626:	ff                   	(bad)  
 8048627:	ff 30                	pushl  (%eax)
 8048629:	00 00                	add    %al,(%eax)
 804862b:	00 00                	add    %al,(%eax)
 804862d:	0e                   	push   %cs
 804862e:	08 46 0e             	or     %al,0xe(%esi)
 8048631:	0c 4a                	or     $0x4a,%al
 8048633:	0f 0b                	ud2    
 8048635:	74 04                	je     804863b <__GNU_EH_FRAME_HDR+0x6b>
 8048637:	78 00                	js     8048639 <__GNU_EH_FRAME_HDR+0x69>
 8048639:	3f                   	aas    
 804863a:	1a 3b                	sbb    (%ebx),%bh
 804863c:	2a 32                	sub    (%edx),%dh
 804863e:	24 22                	and    $0x22,%al
 8048640:	28 00                	sub    %al,(%eax)
 8048642:	00 00                	add    %al,(%eax)
 8048644:	40                   	inc    %eax
 8048645:	00 00                	add    %al,(%eax)
 8048647:	00 f3                	add    %dh,%bl
 8048649:	fd                   	std    
 804864a:	ff                   	(bad)  
 804864b:	ff 6e 00             	ljmp   *0x0(%esi)
 804864e:	00 00                	add    %al,(%eax)
 8048650:	00 44 0c 01          	add    %al,0x1(%esp,%ecx,1)
 8048654:	00 47 10             	add    %al,0x10(%edi)
 8048657:	05 02 75 00 43       	add    $0x43007502,%eax
 804865c:	0f 03 75 7c          	lsl    0x7c(%ebp),%esi
 8048660:	06                   	push   %es
 8048661:	02 5b 0c             	add    0xc(%ebx),%bl
 8048664:	01 00                	add    %eax,(%eax)
 8048666:	41                   	inc    %ecx
 8048667:	c5 43 0c             	lds    0xc(%ebx),%eax
 804866a:	04 04                	add    $0x4,%al
 804866c:	1c 00                	sbb    $0x0,%al
 804866e:	00 00                	add    %al,(%eax)
 8048670:	6c                   	insb   (%dx),%es:(%edi)
 8048671:	00 00                	add    %al,(%eax)
 8048673:	00 35 fe ff ff 9d    	add    %dh,0x9dfffffe
 8048679:	00 00                	add    %al,(%eax)
 804867b:	00 00                	add    %al,(%eax)
 804867d:	41                   	inc    %ecx
 804867e:	0e                   	push   %cs
 804867f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048685:	02 99 c5 0c 04 04    	add    0x4040cc5(%ecx),%bl
 804868b:	00 48 00             	add    %cl,0x0(%eax)
 804868e:	00 00                	add    %al,(%eax)
 8048690:	8c 00                	mov    %es,(%eax)
 8048692:	00 00                	add    %al,(%eax)
 8048694:	bc fe ff ff 5d       	mov    $0x5dfffffe,%esp
 8048699:	00 00                	add    %al,(%eax)
 804869b:	00 00                	add    %al,(%eax)
 804869d:	41                   	inc    %ecx
 804869e:	0e                   	push   %cs
 804869f:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 80486a5:	87 03                	xchg   %eax,(%ebx)
 80486a7:	41                   	inc    %ecx
 80486a8:	0e                   	push   %cs
 80486a9:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 80486af:	83 05 4e 0e 20 69 0e 	addl   $0xe,0x69200e4e
 80486b6:	24 44                	and    $0x44,%al
 80486b8:	0e                   	push   %cs
 80486b9:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
 80486bd:	41                   	inc    %ecx
 80486be:	0e                   	push   %cs
 80486bf:	30 4d 0e             	xor    %cl,0xe(%ebp)
 80486c2:	20 47 0e             	and    %al,0xe(%edi)
 80486c5:	14 41                	adc    $0x41,%al
 80486c7:	c3                   	ret    
 80486c8:	0e                   	push   %cs
 80486c9:	10 41 c6             	adc    %al,-0x3a(%ecx)
 80486cc:	0e                   	push   %cs
 80486cd:	0c 41                	or     $0x41,%al
 80486cf:	c7                   	(bad)  
 80486d0:	0e                   	push   %cs
 80486d1:	08 41 c5             	or     %al,-0x3b(%ecx)
 80486d4:	0e                   	push   %cs
 80486d5:	04 00                	add    $0x0,%al
 80486d7:	00 10                	add    %dl,(%eax)
 80486d9:	00 00                	add    %al,(%eax)
 80486db:	00 d8                	add    %bl,%al
 80486dd:	00 00                	add    %al,(%eax)
 80486df:	00 d0                	add    %dl,%al
 80486e1:	fe                   	(bad)  
 80486e2:	ff                   	(bad)  
 80486e3:	ff 02                	incl   (%edx)
 80486e5:	00 00                	add    %al,(%eax)
 80486e7:	00 00                	add    %al,(%eax)
 80486e9:	00 00                	add    %al,(%eax)
	...

080486ec <__FRAME_END__>:
 80486ec:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	10                   	.byte 0x10
 8049f09:	84 04 08             	test   %al,(%eax,%ecx,1)

Disassembly of section .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	f0                   	lock
 8049f0d:	83                   	.byte 0x83
 8049f0e:	04 08                	add    $0x8,%al

Disassembly of section .jcr:

08049f10 <__JCR_END__>:
 8049f10:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    %eax,(%eax)
 8049f16:	00 00                	add    %al,(%eax)
 8049f18:	01 00                	add    %eax,(%eax)
 8049f1a:	00 00                	add    %al,(%eax)
 8049f1c:	0c 00                	or     $0x0,%al
 8049f1e:	00 00                	add    %al,(%eax)
 8049f20:	d0 82 04 08 0d 00    	rolb   0xd0804(%edx)
 8049f26:	00 00                	add    %al,(%eax)
 8049f28:	b4 85                	mov    $0x85,%ah
 8049f2a:	04 08                	add    $0x8,%al
 8049f2c:	19 00                	sbb    %eax,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	08 9f 04 08 1b 00    	or     %bl,0x1b0804(%edi)
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	04 00                	add    $0x0,%al
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	1a 00                	sbb    (%eax),%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	0c 9f                	or     $0x9f,%al
 8049f42:	04 08                	add    $0x8,%al
 8049f44:	1c 00                	sbb    $0x0,%al
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	04 00                	add    $0x0,%al
 8049f4a:	00 00                	add    %al,(%eax)
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f58:	1c 82                	sbb    $0x82,%al
 8049f5a:	04 08                	add    $0x8,%al
 8049f5c:	06                   	push   %es
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 cc                	add    %cl,%ah
 8049f61:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f68:	60                   	pusha  
 8049f69:	00 00                	add    %al,(%eax)
 8049f6b:	00 0b                	add    %cl,(%ebx)
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 10                	add    %dl,(%eax)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 15 00 00 00 00    	add    %dl,0x0
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 03                	add    %al,(%ebx)
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 00                	add    %al,(%eax)
 8049f81:	a0 04 08 02 00       	mov    0x20804,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	10 00                	adc    %al,(%eax)
 8049f8a:	00 00                	add    %al,(%eax)
 8049f8c:	14 00                	adc    $0x0,%al
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	17                   	pop    %ss
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 c0                	add    %al,%al
 8049f99:	82                   	(bad)  
 8049f9a:	04 08                	add    $0x8,%al
 8049f9c:	11 00                	adc    %eax,(%eax)
 8049f9e:	00 00                	add    %al,(%eax)
 8049fa0:	b8 82 04 08 12       	mov    $0x12080482,%eax
 8049fa5:	00 00                	add    %al,(%eax)
 8049fa7:	00 08                	add    %cl,(%eax)
 8049fa9:	00 00                	add    %al,(%eax)
 8049fab:	00 13                	add    %dl,(%ebx)
 8049fad:	00 00                	add    %al,(%eax)
 8049faf:	00 08                	add    %cl,(%eax)
 8049fb1:	00 00                	add    %al,(%eax)
 8049fb3:	00 fe                	add    %bh,%dh
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f 88             	ljmp   *-0x78(%edi)
 8049fb9:	82                   	(bad)  
 8049fba:	04 08                	add    $0x8,%al
 8049fbc:	ff                   	(bad)  
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fc1:	00 00                	add    %al,(%eax)
 8049fc3:	00 f0                	add    %dh,%al
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f 7c             	ljmp   *0x7c(%edi)
 8049fc9:	82                   	(bad)  
 8049fca:	04 08                	add    $0x8,%al
	...

Disassembly of section .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	16                   	push   %ss
 804a00d:	83 04 08 26          	addl   $0x26,(%eax,%ecx,1)
 804a011:	83                   	.byte 0x83
 804a012:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804a014 <__data_start>:
 804a014:	00 00                	add    %al,(%eax)
	...

0804a018 <__dso_handle>:
 804a018:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a01c <__bss_start>:
 804a01c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x8048258>
   a:	74 75                	je     81 <_init-0x804824f>
   c:	20 35 2e 34 2e 30    	and    %dh,0x302e342e
  12:	2d 36 75 62 75       	sub    $0x75627536,%eax
  17:	6e                   	outsb  %ds:(%esi),(%dx)
  18:	74 75                	je     8f <_init-0x8048241>
  1a:	31 7e 31             	xor    %edi,0x31(%esi)
  1d:	36 2e 30 34 2e       	ss xor %dh,%cs:(%esi,%ebp,1)
  22:	31 32                	xor    %esi,(%edx)
  24:	29 20                	sub    %esp,(%eax)
  26:	35 2e 34 2e 30       	xor    $0x302e342e,%eax
  2b:	20 32                	and    %dh,(%edx)
  2d:	30 31                	xor    %dh,(%ecx)
  2f:	36 30 36             	xor    %dh,%ss:(%esi)
  32:	30 39                	xor    %bh,(%ecx)
	...
