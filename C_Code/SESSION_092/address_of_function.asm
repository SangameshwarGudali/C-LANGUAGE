; Listing generated by Microsoft (R) Optimizing Compiler Version 19.24.28315.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	insertion_sort
PUBLIC	main
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
pdata	SEGMENT
$pdata$insertion_sort DD imagerel $LN8
	DD	imagerel $LN8+161
	DD	imagerel $unwind$insertion_sort
$pdata$main DD	imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$main
pdata	ENDS
xdata	SEGMENT
$unwind$insertion_sort DD 010d01H
	DD	0220dH
$unwind$main DD	011319H
	DD	08204H
	DD	imagerel __GSHandlerCheck
	DD	038H
xdata	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
a$ = 32
__$ArrayPad$ = 56
main	PROC
; File C:\Users\yoges\OneDrive\Documents\CPA\CLASS\C\MST_2\SESSION_092\address_of_function.c
; Line 4
$LN3:
	sub	rsp, 72					; 00000048H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax
; Line 5
	mov	DWORD PTR a$[rsp], 100			; 00000064H
	mov	DWORD PTR a$[rsp+4], 80			; 00000050H
	mov	DWORD PTR a$[rsp+8], 60			; 0000003cH
	mov	DWORD PTR a$[rsp+12], 40		; 00000028H
	mov	DWORD PTR a$[rsp+16], 20
; Line 6
	mov	edx, 5
	lea	rcx, QWORD PTR a$[rsp]
	call	insertion_sort
; Line 7
	xor	eax, eax
; Line 8
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 72					; 00000048H
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
i$ = 0
j$ = 4
key$ = 8
pa$ = 32
N$ = 40
insertion_sort PROC
; File C:\Users\yoges\OneDrive\Documents\CPA\CLASS\C\MST_2\SESSION_092\address_of_function.c
; Line 11
$LN8:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24
; Line 13
	mov	DWORD PTR j$[rsp], 1
	jmp	SHORT $LN4@insertion_
$LN2@insertion_:
	mov	eax, DWORD PTR j$[rsp]
	inc	eax
	mov	DWORD PTR j$[rsp], eax
$LN4@insertion_:
	mov	eax, DWORD PTR N$[rsp]
	cmp	DWORD PTR j$[rsp], eax
	jge	SHORT $LN3@insertion_
; Line 15
	movsxd	rax, DWORD PTR j$[rsp]
	mov	rcx, QWORD PTR pa$[rsp]
	mov	eax, DWORD PTR [rcx+rax*4]
	mov	DWORD PTR key$[rsp], eax
; Line 16
	mov	eax, DWORD PTR j$[rsp]
	dec	eax
	mov	DWORD PTR i$[rsp], eax
$LN5@insertion_:
; Line 17
	cmp	DWORD PTR i$[rsp], -1
	jle	SHORT $LN6@insertion_
	movsxd	rax, DWORD PTR i$[rsp]
	mov	rcx, QWORD PTR pa$[rsp]
	mov	edx, DWORD PTR key$[rsp]
	cmp	DWORD PTR [rcx+rax*4], edx
	jle	SHORT $LN6@insertion_
; Line 19
	movsxd	rax, DWORD PTR i$[rsp]
	mov	ecx, DWORD PTR i$[rsp]
	inc	ecx
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR pa$[rsp]
	mov	r8, QWORD PTR pa$[rsp]
	mov	eax, DWORD PTR [r8+rax*4]
	mov	DWORD PTR [rdx+rcx*4], eax
; Line 20
	mov	eax, DWORD PTR i$[rsp]
	dec	eax
	mov	DWORD PTR i$[rsp], eax
; Line 21
	jmp	SHORT $LN5@insertion_
$LN6@insertion_:
; Line 22
	mov	eax, DWORD PTR i$[rsp]
	inc	eax
	cdqe
	mov	rcx, QWORD PTR pa$[rsp]
	mov	edx, DWORD PTR key$[rsp]
	mov	DWORD PTR [rcx+rax*4], edx
; Line 23
	jmp	$LN2@insertion_
$LN3@insertion_:
; Line 24
	add	rsp, 24
	ret	0
insertion_sort ENDP
_TEXT	ENDS
END
