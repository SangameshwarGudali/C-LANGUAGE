; Listing generated by Microsoft (R) Optimizing Compiler Version 19.24.28315.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	c1
PUBLIC	c2
PUBLIC	s_number
PUBLIC	i_number
PUBLIC	li_number
PUBLIC	lli_number
_DATA	SEGMENT
c1	DB	041H
c2	DB	062H
	ORG $+2
s_number DW	0fe3eH
	ORG $+2
i_number DD	0ffdc34dbH
li_number DD	0fff0edfaH
lli_number DQ	0000000d23cf0b95H
_DATA	ENDS
PUBLIC	main
EXTRN	printf:PROC
EXTRN	exit:PROC
pdata	SEGMENT
$pdata$main DD	imagerel $LN3
	DD	imagerel $LN3+178
	DD	imagerel $unwind$main
pdata	ENDS
_DATA	SEGMENT
$SG6025	DB	'c1 as integer = %hhd', 0aH, 00H
	ORG $+2
$SG6026	DB	'c1 as character = %c', 0aH, 00H
	ORG $+2
$SG6027	DB	'c2 as integer = %hhd', 0aH, 00H
	ORG $+2
$SG6028	DB	'c2 as character = %c', 0aH, 00H
	ORG $+2
$SG6029	DB	'short integer = %hd', 0aH, 00H
	ORG $+3
$SG6030	DB	'integer = %d', 0aH, 00H
	ORG $+2
$SG6031	DB	'long integer = %ld', 0aH, 00H
	ORG $+4
$SG6032	DB	'lli_number = %lld', 0aH, 00H
_DATA	ENDS
xdata	SEGMENT
$unwind$main DD	010401H
	DD	04204H
xdata	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
main	PROC
; File C:\Users\yoges\OneDrive\Documents\CPA\CLASS\C\MST_2\SESSION_034\signed_integers.c
; Line 19
$LN3:
	sub	rsp, 40					; 00000028H
; Line 20
	movsx	eax, BYTE PTR c1
	mov	edx, eax
	lea	rcx, OFFSET FLAT:$SG6025
	call	printf
; Line 21
	movsx	eax, BYTE PTR c1
	mov	edx, eax
	lea	rcx, OFFSET FLAT:$SG6026
	call	printf
; Line 23
	movsx	eax, BYTE PTR c2
	mov	edx, eax
	lea	rcx, OFFSET FLAT:$SG6027
	call	printf
; Line 24
	movsx	eax, BYTE PTR c2
	mov	edx, eax
	lea	rcx, OFFSET FLAT:$SG6028
	call	printf
; Line 27
	movsx	eax, WORD PTR s_number
	mov	edx, eax
	lea	rcx, OFFSET FLAT:$SG6029
	call	printf
; Line 28
	mov	edx, DWORD PTR i_number
	lea	rcx, OFFSET FLAT:$SG6030
	call	printf
; Line 29
	mov	edx, DWORD PTR li_number
	lea	rcx, OFFSET FLAT:$SG6031
	call	printf
; Line 30
	mov	rdx, QWORD PTR lli_number
	lea	rcx, OFFSET FLAT:$SG6032
	call	printf
; Line 32
	xor	ecx, ecx
	call	exit
; Line 33
	xor	eax, eax
	add	rsp, 40					; 00000028H
	ret	0
main	ENDP
_TEXT	ENDS
END
